{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"\ud83d\udc4b Ol\u00e1, eu sou o Felipe Valboeno!","text":"<p>Sou desenvolvedor Java com foco em aplica\u00e7\u00f5es Spring Boot, APIs RESTful e integra\u00e7\u00e3o com banco de dados. Apaixonado por aprender novas tecnologias e resolver problemas com c\u00f3digo limpo e bem estruturado.</p>"},{"location":"about/#tecnologias-que-uso","title":"\ud83d\ude80 Tecnologias que uso","text":"<ul> <li>Java | Spring Boot | JPA | Hibernate</li> <li>JavaScript |</li> <li>Git | GitHub | GitLab</li> <li>SQL | MySQL | PostgreSQL</li> <li>BPMN, Docker, Grafana</li> </ul>"},{"location":"about/#projetos-em-destaque","title":"\ud83d\udccc Projetos em destaque","text":"<ul> <li>Projeto SpringBoot: Trata-se de um projeto de pr\u00e1tica e estudo das tecnologias SpringBoot, JPA/Hibernate utilizando o banco de dados em mem\u00f3ria H2 para os testes.</li> <li> <p>API de Produtos: Trata-se de um projeto base de CRUD completo com SpringBoot feito no vsCode. Muito \u00fatil para iniciantes terem uma base de CRUD no padr\u00e3o MVC com Spring.</p> </li> <li> </li> <li>Paschoalotto \u2013 Estagi\u00e1rio de MIS (Sistemas de Informa\u00e7\u00f5es Gerenciais)</li> <li>Stone Co. Linx \u2013 An\u00e1lise de Suporte</li> <li>Lecom Tecnologia \u2013 Programador</li> </ul>"},{"location":"about/#empresas-onde-ja-atuei","title":"\ud83c\udfe2 Empresas onde j\u00e1 atuei","text":""},{"location":"about/#interesses-pessoais","title":"\ud83c\udfaf Interesses pessoais","text":"<p>Al\u00e9m da tecnologia, gosto de me dedicar a hobbies que estimulam criatividade e foco, como:</p> <ul> <li>\ud83d\udcda Leitura de livros sobre produtividade, desenvolvimento pessoal. Autor preferido de fic\u00e7\u00e3o: Dan Brown.</li> <li>\ud83c\udfa7 Ouvir Rock, ou sons relaxantes enquanto trabalho.</li> <li>\u26bd Passeio com a esposa e nossas dogs.</li> <li>\ud83c\udfae Jogos no PS5</li> </ul> <p>Acredito que manter o equil\u00edbrio entre a vida pessoal e profissional \u00e9 essencial para uma carreira sustent\u00e1vel e criativa.</p>"},{"location":"about/#como-me-encontrar","title":"\ud83d\udceb Como me encontrar","text":"<ul> <li>Email: felipevalboeno@hotmail.com</li> <li>-&gt; Meu LinkedIn</li> </ul>"},{"location":"api/","title":"\ud83e\udde9 API QUICK REFERENCE","text":""},{"location":"api/#http-verbs","title":"\u2728 HTTP Verbs","text":"<p>\u279c GET: Retriev data from the server.</p> <p>\u279c POST: Send data to the server to create a resource.</p> <p>\u279c PUT: Send data to the server to update a resource.</p> <p>\u279c DELETE: Delete a resource from the server.</p> <p>\u279c PATCH: Send data to the server to update a resource partially.</p> <p>\u279c TRACE: Returns the full HTTP Request received by the server for debugging and diagnostic purposes.</p> <p>\u279c OPTIONS: Returns the http methods supported by the server for the request URL.</p> <p>\u279c CONNECT: Converts the request connection to a transparent TCP/IP tunnel for secure communication.</p> <p>\u279c PURGE: Invalidade a cached resource.</p> <p>\u279c LOCK: Locks the resource for exclusive use by the client.</p> <p>\u279c UNLOCK: Unlock the resource previously locked by the client.</p> <p>\u279c MKCOL: Creates a new collection resource.</p> <p>\u279c COPY: Copies the resource identified by the request-URI to the destination URI.</p>"},{"location":"docker/","title":"\ud83d\udc33 What is Docker?","text":"<p>Docker is a platform that allows you to run applications inside containers.</p> <p>Container = a small isolated box that contains everything your application needs to work (Java, database, libraries, lightweight operating system).</p> <p>This avoids the famous \u201cit works on my machine\u201d, because the container runs the same way in any environment (on your PC, on a server, or in the cloud).</p> <p></p>"},{"location":"docker/#practical-example","title":"Practical example:","text":"<p>You have a system in Java 17 + PostgreSQL 14. With Docker, you package this into a container and run it on any machine without manually installing the JDK or PostgreSQL.</p>"},{"location":"docker/#what-is-docker-compose","title":"\u2699\ufe0f What is Docker Compose?","text":"<p>Docker Compose is a tool that makes it easier when you need to run multiple containers together.</p> <p>You describe everything in a docker-compose.yml file.</p> <p>One command docker compose up starts all the services at once.</p> <p></p>"},{"location":"docker/#practical-example_1","title":"Practical example:","text":"<p>Your Java system needs:</p> <p>A container with your Java application (Spring Boot, for example).</p> <p>A container with PostgreSQL.</p> <p>A container with pgAdmin (to manage the database).</p> <p>Instead of running each one separately, the docker-compose.yml brings everything up at once, already configured.</p>"},{"location":"docker/#advantages-for-java-development","title":"Advantages for Java development","text":"<p>Standardized environment \u2013 you don\u2019t need to install JDK, database, Redis, etc. Everything comes ready in the container.</p> <p>Agility \u2013 with just a few commands, your project runs the same on any machine (dev, test, production).</p> <p>Isolation \u2013 different projects can use different Java versions without conflict.</p> <p>Disposable database \u2013 for testing, you can spin up a PostgreSQL container, experiment, and then remove it without leaving a mess.</p> <p>Easy integration \u2013 with Docker Compose you can simulate the whole application ecosystem (Java + database + messaging, etc.).</p>"},{"location":"docker/#in-summary","title":"In summary:","text":"<p>Docker = runs your application in isolated little boxes.</p> <p>Docker Compose = orchestrates multiple little boxes at the same time.</p> <p>For Java = less environment headache, more speed, and consistency from dev \u2192 staging \u2192 production.</p> <p>Quer que eu tamb\u00e9m adapte essa tradu\u00e7\u00e3o para um tom mais corporate/professional (tipo explica\u00e7\u00e3o para entrevista ou LinkedIn), ou manter nesse tom simples e did\u00e1tico?</p>"}]}